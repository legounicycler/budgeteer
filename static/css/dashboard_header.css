#dashboard-title-and-search-row  {
  height: 90px;
  display: flex;
  justify-content: center;
}

#dashboard-page-title {
  font-size: 2em;
  margin: 0 0 0 10px;
  padding-bottom: .1em;
}

#transaction-search-input-field {
  width: calc(100% - 4rem);
  margin: 0px;
}

/* Style the main transaction search input with rounded corners */
#transaction-search {
  height: 3rem;
  margin: 0;
  font-size: 1rem;
  border-bottom: none;
  border-radius: 1.5rem;
  padding-left: 3rem;
  box-shadow: inset 0 0 5px #a2a2a2;
}

/* Hide the #close-search icon by default */
.input-field input[type=search] ~ .material-icons {
  color: #444;
  display: none;
  pointer-events: none;
}

#advanced-search-row .select-wrapper {
  background-color: white;
  height: 2rem;
  border-radius: 1rem;
  margin-right: -1rem;
  box-shadow: inset 0 0 5px #a2a2a2;
}

/* Style all the other transaction search inputs with rounded corners */
#dashboard-header input.t-search-input {
  height: 2rem;
  padding-left: 1rem;
  margin: 0;
  font-size: .75rem;
  border-bottom: none;
  border-radius: 1rem;
  box-shadow: inset 0 0 5px #a2a2a2;
}

/* Style the advanced search envelope/account selectors to look like the other inputs with rounded corners */
#advanced-search-row .select-wrapper {
  background-color: white;
  height: 2rem;
  border-radius: 1rem;
  margin-right: -1rem;
  box-shadow: inset 0 0 5px #a2a2a2;
}

#search-inputs-col .input-field {
  margin-bottom: 0;
}

#advanced-search-row .helper-text {
  height: 1em;
}

#advanced-search-row .helper-text:after {
  margin: 0 0 0 1em;
  text-decoration: underline;
  font-weight: bold;
  line-height: 10px; /* This allows the text to wrap to a second line without flowing over into column below */
}

/* Make visual focus on elements obvious with color change */
#dashboard-header input.t-search-input:focus, #advanced-search-row .select-wrapper:focus-within {
  box-shadow: inset 0 0 5px #24637c;
}

#dashboard-header input.t-search-input.invalid, #advanced-search-row .select-wrapper.invalid {
  box-shadow: inset 0 0 5px rgb(200, 0, 0);
}

/* Style the text within the envelope/account dropdown trigger */
#advanced-search-row .select-dropdown {
  height: 2rem;
  border-bottom: none;
  font-size: .75rem;
  padding-left: 1rem;
}

/* Style the labels above all the advanced search inputs */
#dashboard-header .input-field.col label {
  color: white;
  left: 1rem;
  top: -2px;
}

/* Position the labels above the envelope/account dropdowns */
#dashboard-header .input-field.col label.special-select-label {
  top: -28px;
  left: 1rem;
  color: white;
}

/* Vertically align the search icon in the main transaction search input */
#search-icon {
  top: calc(50% - .9rem);
  left: .75rem;
}

/* Position the close search button in the main transaction search input */
#clear-search {
  top: calc(50% - 1rem);
  right: -2rem;
}

/* Animate the advanced search dropdown button */
#advanced-search-button.collapsed {
  transform: rotate(0deg);
}

/* Animate the advanced search dropdown button */
#advanced-search-button.expanded {
  transform: rotate(180deg);
}

/* Style the advanced search dropdown button */
#advanced-search-button {
  margin-left: 1.8em;
  cursor: pointer;
}

/* Display the multiselect icons vertically */
#multi-select-icons {
  display: flex;
  flex-direction: column;
}

/* Vertically position the multiselect clear button */
#multi-select-clear {
  margin-bottom: 5px;
  cursor: pointer;
}

/* Vertically position the multiselect delete button */
#multi-select-delete {
  margin-top: 5px;
  cursor: pointer;
}

/* Makes up for the left-padding added to the input elements in the column */
#search-inputs-col {
  padding-left: 0;
}

/* Style the search submit buttons */
#search-submit1, #search-submit2 {
  height: 2rem;
  line-height: 2rem;
  width: 2rem;
  display: flex;
  justify-content: center;
  border-radius: 5px;
}

/* Align the search submit button to the right */
#search-submit1-col {
  display: flex;
  justify-content: right;
}

/* SET THE SIZE OF THE DROPDOWN ROW */
.custom-dropdown-class li {
  min-height: 30px;
  overflow: hidden; /* This needs to be here so there's not a 1px scrolling bug */
}

/* SET THE SIZE OF THE DROPDOWN  */
.custom-dropdown-class li > span {
  padding: 0px 7px;
  max-height: 30px;
}

.custom-dropdown-class li > span > label {
  height: 100%;
}

/* Style the text within the envelope/account dropdown optitons */
.custom-dropdown-class li > span > label > span {
  font-size: 1.2em !important;
  padding: 0px 0px 0px 25px !important;
  text-overflow: ellipsis;
  width: 100%;
  height: 30px !important;
  line-height: 30px !important;
  overflow: hidden;
  white-space: nowrap;
}

/* Vertically center the checkbox */
.custom-dropdown-class [type="checkbox"] + span:not(.lever):before, [type="checkbox"]:not(.filled-in) + span:not(.lever):after {
  margin: 0px;
  top: 6px;
}


/* Make the checked checkbox smaller */
[type="checkbox"]:checked + span:not(.lever):before {
  height: 18px;
}

@media only screen and (max-width: 600px) {

  /* Stack the title and search columns */
  #dashboard-page-title-col, #search-col  {
    height: 50%
  }

  /* Make the transaction search input smaller */
  #transaction-search {
    height: 2rem;
    font-size: .75rem;
    padding-left: 2.5rem;
  }

  /* Position the search icon in the main transaction search input */
  #search-icon {
    top: calc(50% - 12px);
    left: .5rem;
  }

  #close-search {
    right: -2.5rem;
    font-size: 1.8rem;
    top: calc(50% - .9rem);
  }

  /* Change from flex to inherit so that the searchbar columns can wrap and display under the page title columns */
  #dashboard-title-and-search-row {
    display: inherit;
  }

  /* Style the dashboard page title since it now displays on top */
  #dashboard-page-title {
    padding-top: .3em;
  }

  /* Display the multiselect icons in a row instead of a column */
  #multi-select-icons {
    flex-direction: row;
  }

  /* Adjust position for row layout */
  #multi-select-clear {
    margin: 0;
  } 

  /* Adjust position for row layout */
  #multi-select-delete {
    margin-left: 5px;
    margin-top: 0px;
  }
}

/* Show server-side errors (data-server-error) in the same ::after position Materialize uses,
   and make them override the regular data-error display when present. */

/* Ensure helper-text itself is visible and interactive when a server error is present */
/* .input-field .helper-text[data-server-error] {
  color: rgba(0, 0, 0, 0.54);
  pointer-events: auto;
  -webkit-user-select: text;
     -moz-user-select: text;
      -ms-user-select: text;
          user-select: text;
} */

/* Display the server error in the ::after pseudo-element (same slot Materialize uses).
   Use a selector that targets the helper-text having data-server-error and the invalid state
   of the control so it overrides the generic materialize rule. */
input.invalid ~ .helper-text[data-server-error]::after,
textarea.invalid ~ .helper-text[data-server-error]::after,
.select-wrapper.invalid ~ .helper-text[data-server-error]::after {
  content: attr(data-server-error) !important;
  /* color: #F44336; */
  /* opacity: 1 !important; */
  /* pointer-events: auto !important; */
}

/* Because Materialize often sets the helper-text content to transparent when using
   data-error rules, explicitly restore visibility for the helper when data-server-error present. */
/* input.invalid ~ .helper-text[data-server-error],
textarea.invalid ~ .helper-text[data-server-error],
.select-wrapper.invalid ~ .helper-text[data-server-error] {
  color: rgba(0,0,0,0.54) !important;
  pointer-events: auto !important;
} */

/* Optional: if you want server errors to use same aria/announce behavior, ensure
   the attribute is accessible (no JS change required if server sets data-server-error). */